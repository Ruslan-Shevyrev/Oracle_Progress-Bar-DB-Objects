CREATE OR REPLACE PACKAGE APEX_APP.PKG$PROGRESS_BAR
AS

-- Создать новый процесс
-- return IDENT
FUNCTION f$STAR_PROCESS RETURN NUMBER;

-- Установить новое состояние progress bar по ident процесса
PROCEDURE p$SET_PROGRESS_STATUS(P_n$IDENT				IN NUMBER, 
								  P_n$STATUS_ID 		IN NUMBER,
								  P_n$PROGRESS_PERCENT	IN NUMBER,
								  P_v$CUSTOM_NAME 		IN varchar2 DEFAULT null);

-- Получить статус процесса по IDENT
-- return PROGRESS_PERCENT
-- P_v$STATUS_NAME - STATUS NAME			 
FUNCTION f$GET_PROGRESS_STATUS(P_n$IDENT			IN NUMBER, 
							   P_v$STATUS_NAME 	OUT varchar2) RETURN NUMBER;

-- Очистить процесс по IDENT			 
PROCEDURE p$CLEARE_PROCESS(P_n$IDENT IN NUMBER);

END PKG$PROGRESS_BAR;
/

CREATE OR REPLACE PACKAGE BODY APEX_APP.PKG$PROGRESS_BAR
AS

-- Создать новый процесс
-- return IDENT
FUNCTION f$STAR_PROCESS RETURN NUMBER
AS 
BEGIN 
	RETURN SEQ_PROGRESS_BAR_IDENT.nextval;
END f$STAR_PROCESS;	

-- Установить новое состояние progress bar по ident процесса
PROCEDURE p$SET_PROGRESS_STATUS(P_n$IDENT				IN NUMBER, 
						 		P_n$STATUS_ID 			IN NUMBER,
						 		P_n$PROGRESS_PERCENT	IN NUMBER,
						 		P_v$CUSTOM_NAME 		IN varchar2 DEFAULT null)
AS 
PRAGMA 
	AUTONOMOUS_TRANSACTION;
BEGIN 
	INSERT INTO PROGRESS_BAR(STATUS_ID, CUSTOM_NAME, IDENT, PROGRESS_PERCENT) 
							VALUES (P_n$STATUS_ID, P_v$CUSTOM_NAME, P_n$IDENT, P_n$PROGRESS_PERCENT);
	COMMIT;
END p$SET_PROGRESS_STATUS;

-- Получить статус процесса по IDENT
-- return PROGRESS_PERCENT
-- P_v$STATUS_NAME - STATUS NAME
FUNCTION f$GET_PROGRESS_STATUS(P_n$IDENT		IN NUMBER, 
							   P_v$STATUS_NAME 	OUT varchar2) RETURN NUMBER
AS 
	RESULT NUMBER;
BEGIN 
	SELECT p.PROGRESS_PERCENT, nvl(p.CUSTOM_NAME, s.NAME) INTO RESULT, P_v$STATUS_NAME 
				FROM PROGRESS_BAR p
				INNER JOIN PROGRESS_BAR_STATUS s 
					ON p.STATUS_ID = s.ID
				WHERE p.ID = 
						(SELECT MAX(ID) FROM PROGRESS_BAR WHERE IDENT = P_n$IDENT);
	RETURN RESULT;
END f$GET_PROGRESS_STATUS;

-- Очистить процесс по IDENT			 
PROCEDURE p$CLEARE_PROCESS(P_n$IDENT IN NUMBER)
AS
PRAGMA 
	AUTONOMOUS_TRANSACTION;
BEGIN 
	DELETE FROM PROGRESS_BAR 
				WHERE IDENT = P_n$IDENT;
	COMMIT;
END p$CLEARE_PROCESS;

END PKG$PROGRESS_BAR;
/